name: Build and Deploy

on:
  push:

jobs:
  backend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: 'src/backend'
    steps:
      - uses: actions/checkout@v4
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.100
      - name: Install dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build --configuration Release --no-restore
      - name: Run unit tests
        run: dotnet test tests/FoodDiary.UnitTests --no-restore --verbosity normal
      - name: Run component tests
        run: dotnet test tests/FoodDiary.ComponentTests --no-restore --verbosity normal
  frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: 'src/frontend'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '18.16.0'
      - name: Install
        run: yarn install
      - name: Lint
        run: yarn lint
      - name: Build
        run: yarn build
      - name: Test
        run: yarn test
  e2e-tests:
    needs:
      - backend
      - frontend
    runs-on: ubuntu-latest
    timeout-minutes: 10
    defaults:
      run:
        working-directory: 'tests'
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Start containers
      run: docker-compose up -d --build
    - name: Setup node
      uses: actions/setup-node@v4
      with:
        node-version: '18.16.0'
    - name: Install dependencies
      run: yarn
    - name: Lint
      run: yarn lint
    - name: Install Playwright Browsers
      run: yarn playwright install --with-deps
    - name: Run Playwright tests
      run: yarn playwright test
    - uses: actions/upload-artifact@v3
      if: always()
      with:
        name: playwright-report
        path: tests/playwright-report/
        retention-days: 30
    - name: Stop containers
      if: always()
      run: docker-compose down
  run-migrations:
    runs-on: ubuntu-latest
    needs: e2e-tests
    if: ${{ github.ref == 'refs/heads/main' }}
    steps:
      - uses: actions/checkout@v4
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.100
      - name: Run migrator
        run: dotnet run --configuration Release --project src/backend/src/FoodDiary.Migrator/FoodDiary.Migrator.csproj "${{ secrets.Migrator_DatabaseConnectionString }}"
  deploy:
    runs-on: ubuntu-latest
    needs: run-migrations
    if: ${{ github.ref == 'refs/heads/main' }}
    steps:
      - name: Checkout to the branch
        uses: actions/checkout@v4
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.FOODDIARY_AZURE_CREDENTIALS }}
      - name: Build and push container image to registry
        uses: azure/container-apps-deploy-action@v2
        with:
          appSourcePath: ${{ github.workspace }} 
          registryUrl: docker.io
          registryUsername: ${{ secrets.FOODDIARY_REGISTRY_USERNAME }}
          registryPassword: ${{ secrets.FOODDIARY_REGISTRY_PASSWORD }}
          containerAppName: food-diary
          resourceGroup: rg-food-diary
          imageToBuild: pkirilin/food-diary:${{ github.sha }}
